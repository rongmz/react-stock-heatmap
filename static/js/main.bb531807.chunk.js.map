{"version":3,"sources":["../../node_modules/d3-timer/src/timer.js","../../node_modules/d3-timer/src/timeout.js","../../node_modules/d3-timer/src/interval.js","../../node_modules/d3-ease/src/quad.js","../../node_modules/d3-ease/src/cubic.js","../../node_modules/d3-ease/src/poly.js","../../node_modules/d3-ease/src/sin.js","../../node_modules/d3-ease/src/math.js","../../node_modules/d3-ease/src/exp.js","../../node_modules/d3-ease/src/circle.js","../../node_modules/d3-ease/src/bounce.js","../../node_modules/d3-ease/src/back.js","../../node_modules/d3-ease/src/elastic.js","../../node_modules/d3-ease/src/linear.js","../../src/utils.js","../../src/index.js","App.js","index.js"],"names":["taskHead","taskTail","timeout","interval","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","window","requestAnimationFrame","bind","f","setTimeout","clearNow","Timer","this","_call","_time","_next","timer","callback","delay","time","t","restart","timerFlush","e","call","wake","t0","t2","t1","Infinity","sleep","nap","poke","clearTimeout","clearInterval","setInterval","prototype","constructor","TypeError","stop","elapsed","total","_restart","tick","quadInOut","cubicInOut","polyIn","custom","Math","pow","exponent","polyOut","polyInOut","pi","PI","halfPi","sinInOut","cos","tpmt","x","expInOut","circleInOut","sqrt","b0","bounceOut","backIn","s","overshoot","backOut","backInOut","tau","elasticIn","a","p","asin","max","sin","amplitude","period","elasticOut","elasticInOut","extractBidPrices","data","set","Set","d","marketDepth","buys","b","sells","acc","Array","extractBidVolumes","extractMaxVolume","vols","extractMaxTradedVolume","zoomTimeFormat","seconds","hrs","mins","d3","Object","React","borderPadding","bidAskWidth","axisYWidth","axisXHeight","buyColor","textOnBuyColor","sellColor","textOnSellColor","textOnBackground","tradeColor","axisTickSize","axisColor","xAxisTextPadding","yAxisTextPadding","bidAskGraphPaddingLeft","bidAskTransitionDuration","hmWidth","hmHeight","clearColor","dragLength","moveDataPointsCount","l2","l","height","width","y","w","h","textHeight","assumedTextWidth","bandInterval","parseInt","i","lastTradedPrice","maxTextWidth","tw","maxBidAskVol","drawBars","arr","color","textColor","v","maxTradedVolume","xh2","ts","buy","sell","r","position","zoom","shouldUpdate","props","nextProps","canvasRef","current","getContext","ref","style","display","cursor","useState","loading","setLoading","progressRef","useRef","heatmapRef","windowDim","setWindowDim","useEffect","fetch","then","body","headers","reader","getReader","contentLength","get","receivedLength","chunks","read","done","value","push","length","innerHTML","toFixed","chunksAll","Uint8Array","chunk","result","TextDecoder","decode","setData","split","filter","trim","map","JSON","parse","updateFn","innerWidth","innerHeight","addEventListener","removeEventListener","Fragment","className","onClick","setZoomLevel","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.bb531807.chunk.js","sourcesContent":["var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer.js\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(elapsed => {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {Timer, now} from \"./timer.js\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  t._restart = t.restart;\n  t.restart = function(callback, delay, time) {\n    delay = +delay, time = time == null ? now() : +time;\n    t._restart(function tick(elapsed) {\n      elapsed += total;\n      t._restart(tick, total += delay, time);\n      callback(elapsed);\n    }, delay, time);\n  }\n  t.restart(callback, delay, time);\n  return t;\n}\n","export function quadIn(t) {\n  return t * t;\n}\n\nexport function quadOut(t) {\n  return t * (2 - t);\n}\n\nexport function quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return (+t === 1) ? 1 : 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","// tpmt is two power minus ten times t scaled to [0,1]\nexport function tpmt(x) {\n  return (Math.pow(2, -10 * x) - 0.0009765625) * 1.0009775171065494;\n}\n","import {tpmt} from \"./math.js\";\n\nexport function expIn(t) {\n  return tpmt(1 - +t);\n}\n\nexport function expOut(t) {\n  return 1 - tpmt(t);\n}\n\nexport function expInOut(t) {\n  return ((t *= 2) <= 1 ? tpmt(1 - t) : 2 - tpmt(t - 1)) / 2;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return (t = +t) * t * (s * (t - 1) + t);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((t + 1) * s + t) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","import {tpmt} from \"./math.js\";\n\nvar tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * tpmt(-(--t)) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * tpmt(t = +t) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * tpmt(-t) * Math.sin((s - t) / p)\n        : 2 - a * tpmt(t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export const linear = t => +t;\n","/**\r\n * Extract buy/sell bid prices from data points\r\n * @param {any[]} data \r\n * @returns {number[]}\r\n */\r\nexport const extractBidPrices = (data) => {\r\n  const set = new Set(data.map(d => {\r\n    const marketDepth = d.marketDepth;\r\n    if (marketDepth) {\r\n      let buys = marketDepth.buys.map(b => +b.rate);\r\n      let sells = marketDepth.sells.map(b => +b.rate);\r\n      return buys.concat(sells, [+marketDepth.lastTradedPrice]);\r\n    }\r\n    return [];\r\n  }).reduce((acc, val) => acc.concat(val), []));\r\n  return Array.from(set);\r\n}\r\n\r\n/**\r\n * Extract buy/sell bid volumnes from a single data point\r\n * @param {any} data \r\n * @returns {number[]}\r\n */\r\nexport const extractBidVolumes = (data) => {\r\n  const marketDepth = data.marketDepth;\r\n  if (marketDepth) {\r\n    let buys = marketDepth.buys.map(b => +b.qty);\r\n    let sells = marketDepth.sells.map(b => +b.qty);\r\n    return buys.concat(sells);\r\n  }\r\n  else return [];\r\n}\r\n\r\n/**\r\n * Extract max volume (buy or sell) for a data point\r\n * @param {any} data \r\n * @returns {number}\r\n */\r\nexport const extractMaxVolume = (data) => {\r\n  const vols = extractBidVolumes(data).sort((a, b) => a - b);\r\n  if (vols.length > 0) return vols[vols.length - 1];\r\n  else return 1;\r\n}\r\n\r\n/**\r\n * Extract max traded volume within a given set of datapoints\r\n * @param {any[]} data \r\n * @returns {number}\r\n */\r\nexport const extractMaxTradedVolume = (data) => {\r\n  let vols = data.map(d => {\r\n    if (d.marketDepth) return +d.marketDepth.lastTradedQty;\r\n    else return 0;\r\n  }).sort((a, b) => a - b);\r\n  if (vols.length > 0) return vols[vols.length - 1];\r\n  else return 1;\r\n}\r\n\r\n/**\r\n * Format zoom scale time\r\n * @param {number} seconds \r\n */\r\nexport const zoomTimeFormat = (seconds) => {\r\n  if(seconds > 59) {\r\n    if(seconds > 3599) {\r\n      let hrs = seconds/3600;\r\n      return `${hrs.toFixed(2)} hour${hrs>1?'s':''}`;\r\n    } \r\n    else {\r\n      let mins = seconds/60;\r\n      return `${mins.toFixed(2)} minute${mins>1?'s':''}`;\r\n    }\r\n  }\r\n  else return `${seconds} second${seconds>1?'s':''}`;\r\n}","import React from 'react';\nimport * as d3Scale from 'd3-scale';\nimport * as d3Array from 'd3-array';\nimport * as d3Color from 'd3-color';\nimport * as d3Format from 'd3-format';\nimport * as d3Interpolate from 'd3-interpolate';\nimport * as d3Shape from 'd3-shape';\nimport * as d3Zoom from 'd3-zoom';\nimport * as d3Timer from 'd3-timer';\nimport * as d3Ease from 'd3-ease';\nimport { extractBidPrices, extractBidVolumes, extractMaxTradedVolume, extractMaxVolume, zoomTimeFormat } from './utils';\n\nexport const d3 = Object.assign(\n  Object.assign(\n    Object.assign({}, d3Scale, d3Array, d3Color)\n    , d3Format, d3Interpolate, d3Shape\n  )\n  , d3Zoom, d3Ease, d3Timer\n);\n\n/**\n * Stock Heatmap\n * @author Rounak Saha\n * \n * © Copyright 2020, Rounak Saha\n */\nexport default class StockHeatmap extends React.Component {\n\n  /** @type {React.RefObject<HTMLCanvasElement>} */\n  canvasRef = React.createRef();\n  /** @type {CanvasRenderingContext2D} */\n  drawingContext = null;\n\n  data = [];\n  windowedData = [];\n  windowLength = 40;\n  windowPosition = 0;\n  autoScroll = true;\n\n  /** Default Theme colors and dimensions */\n  defaults = {\n    borderPadding: [5, 5, 0, 0],\n    bidAskWidth: 100,\n    axisYWidth: 50,\n    axisXHeight: 50,\n    buyColor: '#388e3c',\n    textOnBuyColor: '#ffffff',\n    sellColor: '#d32f2f',\n    textOnSellColor: '#ffffff',\n    textOnBackground: '#000000',\n    tradeColor: '#7434eb',\n    axisTickSize: 6,\n    axisColor: '#000000',\n    xAxisTextPadding: 6,\n    yAxisTextPadding: 6,\n    bidAskGraphPaddingLeft: 10,\n    bidAskTransitionDuration: 500,\n    hmWidth: () => (this.props.width - this.defaults.borderPadding[1] - this.defaults.borderPadding[3] - this.defaults.bidAskWidth - this.defaults.axisYWidth),\n    hmHeight: () => (this.props.height - this.defaults.borderPadding[0] - this.defaults.borderPadding[2] - this.defaults.axisXHeight),\n    clearColor: '#ffffff',\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // console.log('shouldComponentUpdate', nextProps);\n    const shouldUpdate = this.props.width !== nextProps.width\n      || this.props.height !== nextProps.height;\n    if (shouldUpdate) {\n      this.detachMouseListeners();\n    }\n    return shouldUpdate;\n  }\n\n  // -------------------START:: Lifecycle methods to retrive 2d context from updated dom-------------------------\n  componentDidMount() {\n    // console.log('component mouted');\n    if (this.canvasRef.current !== null) {\n      this.drawingContext = this.canvasRef.current.getContext('2d');\n      this.updateHeatmap();\n      this.attachMouseListeners();\n    }\n  }\n  componentDidUpdate() {\n    // console.log('component updtated');\n    if (this.canvasRef.current !== null) {\n      this.drawingContext = this.canvasRef.current.getContext('2d');\n      this.updateHeatmap();\n      this.attachMouseListeners();\n    }\n  }\n  componentWillUnmount() {\n    this.detachMouseListeners();\n  }\n  // -------------------END:: Lifecycle methods to retrive 2d context from updated dom---------------------------\n\n\n  // ------------------ START:: Mouse Event listeners -------------------\n  isMouseDown = false;\n  mouseDownX = 0;\n\n  /**\n   * Attaches mouse interaction event listeners\n   */\n  attachMouseListeners = () => {\n    if (this.canvasRef.current !== null) {\n      this.canvasRef.current.addEventListener('mousedown', this.eventMouseDown);\n      this.canvasRef.current.addEventListener('mousemove', this.eventMouseMove);\n      this.canvasRef.current.addEventListener('mouseup', this.eventMouseUp);\n      this.canvasRef.current.addEventListener('wheel', this.eventZoomWheel);\n    }\n  }\n\n  /**\n   * Detaches mouse interaction event listeners\n   */\n  detachMouseListeners = () => {\n    if (this.canvasRef.current !== null) {\n      this.canvasRef.current.removeEventListener('mousedown', this.eventMouseDown);\n      this.canvasRef.current.removeEventListener('mousemove', this.eventMouseMove);\n      this.canvasRef.current.removeEventListener('mouseup', this.eventMouseUp);\n      this.canvasRef.current.removeEventListener('wheel', this.eventZoomWheel);\n    }\n  }\n\n  /**\n   * Mouse down event on canvas\n   * @param {MouseEvent} e \n   */\n  eventMouseDown = (e) => {\n    // console.log('eventMouseDown', e);\n    this.isMouseDown = true;\n    this.mouseDownX = e.x;\n  }\n\n  /**\n   * Mouse move event on canvas\n   * @param {MouseEvent} e \n   */\n  eventMouseMove = (e) => {\n    if (this.isMouseDown) {\n      // Mouse drag, scroll the time series\n      const dragLength = e.x - this.mouseDownX;\n      const moveDataPointsCount = Math.floor(Math.abs(dragLength) / this.xScale.bandwidth());\n      if (moveDataPointsCount > 0) this.mouseDownX = e.x;\n      // const moveDataPointDirection = dragLength >= 0 ? 'right' : 'left';\n      // console.log('drag x=', dragLength, moveDataPointsCount, this.windowPosition);\n      this.moveDataWindow(this.windowPosition + moveDataPointsCount * (dragLength >= 0 ? -1 : 1));\n    }\n    else {\n      // normal mouse move\n\n    }\n  }\n\n  /**\n   * Mouse up event on canvas\n   * @param {MouseEvent} e \n   */\n  eventMouseUp = (e) => {\n    // console.log('eventMouseUp',e);\n    this.isMouseDown = false;\n    this.mouseDownX = 0;\n  }\n\n  /**\n   * Wheel event on canvas to zoom\n   * @param {WheelEvent} e \n   */\n  eventZoomWheel = (e) => {\n    const direction = e.deltaY < 0 ? 'zoom-in' : 'zoom-out';\n    let l = 0, l2 = 0;\n    switch (direction) {\n      case 'zoom-in':\n        l = Math.max(this.windowLength - 1, 3);\n        break;\n      case 'zoom-out':\n        l = Math.min(this.windowLength + 1, this.data.length - 1);\n        break;\n    }\n    l2 = this.windowLength - l;\n    this.windowLength = l;\n    this.moveDataWindow(this.windowPosition + l2);\n    // console.log('zoom Level=', this.windowLength);\n  }\n\n  // ------------------ END:: Mouse Event listeners ---------------------\n\n\n  // ------------------ D3 Variables ---------------------\n  /** @type {d3Scale.ScaleBand<string>} */\n  xScale = null;\n  /** @type {d3Scale.ScaleLinear<number, number>} */\n  bidAskScale = null;\n  /** @type {d3Scale.ScaleBand<string>} */\n  yScale = null;\n  /** @type {number[]} */\n  yDomainValues = null;\n  /** @type {d3Timer.Timer} */\n  bidAskAnimTimer = null;\n  /** @type {{[key:number]:number}} */\n  bidAskBarAnimConfig = {};\n  // ------------------ D3 Variables ---------------------\n\n  /**\n   * This function will be called if there is any dimension change on heatmap\n   * This function changes the d3 scales based on windowed data\n   */\n  updateHeatmapDimensions = () => {\n    // console.log('heatmap dimension updated, update scale domains');\n    const { width, height } = this.props;\n    if (width > 0 && height > 0 && this.windowedData.length > 0) {\n      // setup x-scale\n      this.xScale = d3.scaleBand()\n        .range([0, this.defaults.hmWidth()])\n        .domain(this.windowedData.map(d => d.ts));\n      // setup y-scale\n      this.yDomainValues = extractBidPrices(this.windowedData).sort((a, b) => a - b);\n      this.yScale = d3.scaleBand()\n        .range([this.defaults.hmHeight(), 0])\n        .domain(this.yDomainValues);\n      // setup bid ask scale\n      this.bidAskScale = d3.scaleLinear()\n        .range([0, this.defaults.bidAskWidth])\n        .domain([0, d3.max(extractBidVolumes(this.windowedData[this.windowedData.length - 1]))]);\n    }\n  }\n\n\n  /**\n   * This method will be called after an update of internal data is performed.\n   */\n  updateHeatmap = () => {\n    if (this.drawingContext !== null) {\n      // console.log('heatmap update req');\n      // 1. update scale and dimensions\n      this.updateHeatmapDimensions();\n\n      // 2. Draw the bid ask spread heatmap\n      this.clearCanvas(this.defaults.borderPadding[3], this.defaults.borderPadding[0],\n        this.defaults.hmWidth(), this.defaults.hmHeight(), this.defaults.clearColor);\n      this.drawMainGraph();\n\n      // 3. Draw xy Axis\n      this.drawXAxis();\n      this.drawYAxisAndBidAskGraph();\n\n      // 4. Draw buy-to-sell ratio\n      this.drawBuy2SellRatio();\n\n      // console.log('heatmap draw update');\n      // this.clearCanvas(0, 0, this.defaults.hmWidth(), this.defaults.hmHeight(), '#aaaaaa');\n    }\n  }\n\n  // ------------------------------ START: Canvas draw functions ---------------------------------------\n\n  /**\n   * Draw buy/sell ratio at bottom right corner\n   */\n  drawBuy2SellRatio = () => {\n    if (this.windowedData.length > 0) {\n      // dimension\n      const d = this.windowedData[this.windowedData.length - 1];\n      const x = this.defaults.borderPadding[3] + this.defaults.hmWidth() + this.defaults.axisTickSize;\n      const y = this.defaults.borderPadding[0] + this.defaults.hmHeight() + this.defaults.axisTickSize;\n      const w = this.props.width - x;\n      const h = this.props.height - y;\n      this.clearCanvas(x, y, w, h, this.defaults.clearColor);\n      let textHeight = (h - 15) / 2;\n      this.drawingContext.save();\n      this.drawingContext.textAlign = 'center';\n      this.drawingContext.textBaseline = 'middle';\n      this.drawingContext.font = `bold ${textHeight}px sans-serif`;\n      this.drawingContext.fillText((d.marketDepth.buyOrderVolume / d.marketDepth.sellOrderVolume).toFixed(2), x + w / 2, y + textHeight / 2);\n      this.drawingContext.fillText('Buy/Sell', x + w / 2, y + textHeight * 1.5 + 5);\n      this.drawingContext.restore();\n    }\n  }\n\n  /**\n   * Draws X Axis\n   */\n  drawXAxis = () => {\n    // clear canvas before axis draw\n    this.clearCanvas(\n      this.defaults.borderPadding[3], this.defaults.borderPadding[0] + this.defaults.hmHeight(),\n      this.defaults.hmWidth(), this.defaults.axisXHeight, this.defaults.clearColor\n    );\n    // draw axis\n    this.drawingContext.save();\n    this.drawingContext.beginPath();\n    this.drawingContext.translate(this.defaults.borderPadding[3], this.defaults.borderPadding[0] + this.defaults.hmHeight());\n    this.drawingContext.moveTo(0, 0);\n    this.drawingContext.lineTo(this.defaults.hmWidth(), 0);\n    this.drawingContext.textAlign = 'center';\n    this.drawingContext.textBaseline = 'top';\n    const assumedTextWidth = this.drawingContext.measureText('77:77:77').width + 20;\n    const bandInterval = parseInt(assumedTextWidth / (this.xScale?.bandwidth() || 1)) || 1;\n    // console.log('bandInterval=', bandInterval);\n    this.windowedData.map((d, i) => {\n      let x = this.xScale(d.ts);\n      this.drawingContext.moveTo(x, 0);\n      this.drawingContext.lineTo(x, this.defaults.axisTickSize);\n      if (i % bandInterval === 0)\n        this.drawingContext.fillText(d.ts, x, this.defaults.axisTickSize + this.defaults.xAxisTextPadding);\n    });\n    this.drawingContext.textAlign = 'left';\n    this.drawingContext.fillText(`Zoom Level:  ${zoomTimeFormat(this.windowLength)}`, 20, this.defaults.axisTickSize + this.defaults.xAxisTextPadding + 20);\n    let w = this.drawingContext.measureText(`Zoom Level:  ${zoomTimeFormat(this.windowLength)}`).width;\n    if (this.windowedData.length > 0)\n      this.drawingContext.fillText(`LTP:  ${this.windowedData[this.windowedData.length - 1].marketDepth.lastTradedPrice\n        }     LTQ:  ${this.windowedData[this.windowedData.length - 1].marketDepth.lastTradedQty\n        }`, 20 + w + 20, this.defaults.axisTickSize + this.defaults.xAxisTextPadding + 20);\n    this.drawingContext.lineWidth = 1.2;\n    this.drawingContext.strokeStyle = this.defaults.axisColor;\n    this.drawingContext.stroke();\n    this.drawingContext.restore();\n  }\n\n  /**\n   * Draws Y Axis and Bid Ask graph at the same time\n   */\n  drawYAxisAndBidAskGraph = () => {\n    if (this.yDomainValues !== null) {\n      // clear canvas before axis draw\n      this.clearCanvas(\n        this.defaults.borderPadding[3] + this.defaults.hmWidth(), this.defaults.borderPadding[0],\n        this.defaults.axisYWidth, this.defaults.hmHeight() + this.defaults.axisTickSize, this.defaults.clearColor\n      );\n      // translate and draw\n      this.drawingContext.save();\n      this.drawingContext.beginPath();\n      this.drawingContext.translate(this.defaults.borderPadding[3] + this.defaults.hmWidth(), this.defaults.borderPadding[0]);\n      this.drawingContext.moveTo(0, 0);\n      this.drawingContext.lineTo(0, this.defaults.hmHeight() + this.defaults.axisTickSize);\n      this.drawingContext.textAlign = 'start';\n      this.drawingContext.textBaseline = 'top';\n      let maxTextWidth = 0;\n      this.yDomainValues.map(d => {\n        let y = this.yScale(d);\n        this.drawingContext.moveTo(0, y);\n        this.drawingContext.lineTo(this.defaults.axisTickSize, y);\n        this.drawingContext.fillText(d.toFixed(2), this.defaults.axisTickSize + this.defaults.yAxisTextPadding, y + 2, this.defaults.axisYWidth - this.defaults.axisTickSize + this.defaults.yAxisTextPadding);\n        let tw = this.drawingContext.measureText(d.toFixed(2)).width;\n        maxTextWidth = maxTextWidth >= tw ? maxTextWidth : tw;\n      });\n      this.drawingContext.lineWidth = 1.2;\n      this.drawingContext.strokeStyle = this.defaults.axisColor;\n      this.drawingContext.stroke();\n      this.drawingContext.restore();\n\n      // Now I will draw the bid ask strength graph,\n      const x = this.defaults.borderPadding[3] + this.defaults.hmWidth() + maxTextWidth + this.defaults.axisTickSize + this.defaults.yAxisTextPadding + this.defaults.bidAskGraphPaddingLeft;\n      const y = this.defaults.borderPadding[0];\n      this.drawBidAskGraph(x, y);\n    }\n  }\n\n  /**\n   * Draw and animate Bid Ask graph\n   * @param {number} x \n   * @param {number} y \n   */\n  drawBidAskGraph = (x, y) => {\n    if (this.windowedData.length > 0) {\n      if (this.bidAskAnimTimer !== null) {\n        this.bidAskAnimTimer.stop();\n        this.bidAskAnimTimer = null;\n      }\n      this.bidAskAnimTimer = d3.timer(elapsed => {\n        // compute how far through the animation we are (0 to 1)\n        const t = Math.min(1, d3.easeCubic(elapsed / this.defaults.bidAskTransitionDuration));\n\n        // ----------------draw--------------------\n        // console.log('drawing bid ask graph');\n        this.clearCanvas(\n          x, y, this.defaults.bidAskWidth, this.defaults.hmHeight() + this.defaults.axisTickSize, this.defaults.clearColor\n        );\n        const h = this.yScale.bandwidth() - 2;\n        const d = this.windowedData[this.windowedData.length - 1];\n        const maxBidAskVol = extractMaxVolume(d);\n        this.drawingContext.save();\n        this.drawingContext.translate(x, y);\n        this.drawingContext.lineWidth = 0;\n        this.drawingContext.textBaseline = 'middle';\n        const drawBars = (arr, color, textColor) => {\n          arr.map(v => {\n            this.drawingContext.fillStyle = color;\n            const l = this.defaults.bidAskWidth * (+v.qty / maxBidAskVol);\n            // save v bars length\n            this.bidAskBarAnimConfig[v.rate] = d3.interpolateNumber(this.bidAskBarAnimConfig[v.rate] || 0, l)(t);\n            this.drawingContext.fillRect(0, this.yScale(v.rate), this.bidAskBarAnimConfig[v.rate], h);\n            let tw = this.drawingContext.measureText(v.qty).width;\n            if (this.defaults.bidAskWidth - this.bidAskBarAnimConfig[v.rate] - 2 >= tw) {\n              // text outside bar\n              this.drawingContext.textAlign = 'start';\n              this.drawingContext.fillStyle = this.defaults.textOnBackground;\n              this.drawingContext.fillText(v.qty, this.bidAskBarAnimConfig[v.rate] + 2, this.yScale(v.rate) + h / 2 + 1);\n            } else {\n              this.drawingContext.textAlign = 'end';\n              this.drawingContext.fillStyle = textColor;\n              this.drawingContext.fillText(v.qty, this.bidAskBarAnimConfig[v.rate] - 2, this.yScale(v.rate) + h / 2 + 1);\n            }\n          });\n        }\n        drawBars(d.marketDepth.buys, this.defaults.buyColor, this.defaults.textOnBuyColor);\n        drawBars(d.marketDepth.sells, this.defaults.sellColor, this.defaults.textOnSellColor);\n        this.drawingContext.restore();\n        // ----------------draw--------------------\n\n        // if this animation is over\n        if (t === 1) this.bidAskAnimTimer.stop();\n      });\n    }\n  }\n\n  /**\n   * Draws background heatmap for both buys and sells\n   */\n  drawMainGraph = () => {\n    this.drawingContext.save();\n    if (this.xScale && this.yScale && this.bidAskScale && this.drawingContext !== null) {\n      const maxTradedVolume = extractMaxTradedVolume(this.windowedData);\n      const xh2 = this.xScale.bandwidth() * 0.5;\n      const yh2 = this.yScale.bandwidth() * 0.5;\n      this.drawingContext.translate(this.defaults.borderPadding[3], this.defaults.borderPadding[0]);\n      this.windowedData.map(d => {\n        const marketDepth = d.marketDepth;\n        const ts = d.ts;\n        const maxBidAskVol = extractMaxVolume(d);\n        // draw buys\n        if (marketDepth.buys && marketDepth.buys.length > 0) {\n          let color = d3.color(this.defaults.buyColor).rgb();\n          marketDepth.buys.map(buy => {\n            color.opacity = buy.qty / maxBidAskVol;\n            this.drawingContext.fillStyle = color.toString();\n            this.drawingContext.fillRect(\n              this.xScale(ts),\n              this.yScale(buy.rate),\n              this.xScale.bandwidth(),\n              this.yScale.bandwidth()\n            );\n          });\n        }\n        // draw sells\n        if (marketDepth.sells && marketDepth.sells.length > 0) {\n          let color = d3.color(this.defaults.sellColor).rgb();\n          marketDepth.sells.map(sell => {\n            color.opacity = sell.qty / maxBidAskVol;\n            this.drawingContext.fillStyle = color.toString();\n            this.drawingContext.fillRect(\n              this.xScale(ts),\n              this.yScale(sell.rate),\n              this.xScale.bandwidth(),\n              this.yScale.bandwidth()\n            );\n          });\n        }\n        // draw trade line and size\n        let color = d3.color(this.defaults.tradeColor).rgb();\n        color.opacity = 1;\n        this.drawingContext.lineWidth = 1;\n        this.drawingContext.fillStyle = color.toString();\n        const r = xh2 * (+marketDepth.lastTradedQty / maxTradedVolume);\n        this.drawingContext.beginPath();\n        this.drawingContext.arc(\n          this.xScale(ts) /* + xh2*/,\n          this.yScale(+marketDepth.lastTradedPrice) /* + yh2*/,\n          r, 0, 2 * Math.PI\n        );\n        this.drawingContext.fill();\n      });\n      // draw line path\n      this.drawingContext.beginPath();\n      d3.line()\n        .x(d => this.xScale(d.ts))\n        .y(d => this.yScale(+d.marketDepth.lastTradedPrice))\n        .curve(d3.curveLinear)\n        .context(this.drawingContext)\n        (this.windowedData);\n      this.drawingContext.lineWidth = 1;\n      this.drawingContext.strokeStyle = this.defaults.tradeColor;\n      this.drawingContext.stroke();\n    }\n    this.drawingContext.restore();\n  }\n\n  /**\n   * Clear the canvas area\n   * @param {number} x x coordinate\n   * @param {number} y y xoordinate\n   * @param {number} w width\n   * @param {number} h height\n   * @param {string} color color string\n   */\n  clearCanvas = (x, y, w, h, color) => {\n    // console.log('clear canvas area', x, y, w, h, color);\n    if (this.drawingContext !== null) {\n      this.drawingContext.save();\n      this.drawingContext.fillStyle = color || this.defaults.clearColor;\n      this.drawingContext.fillRect(x, y, w, h);\n      this.drawingContext.restore();\n    }\n  }\n\n  // ------------------------------ END: Canvas draw functions ---------------------------------------\n\n  /**\n   * Set Data for the Heatmap to generate\n   * @param {any[]} data The data to set\n   */\n  setData = (data) => {\n    // console.log('setdata called=', data);\n    if (data && data.length > 0) {\n      this.data = data;\n      this.updateWindowedData();\n    }\n  }\n\n  /**\n   * Add as extra data to existing data array.\n   * @param {any} data \n   */\n  addData = (data) => {\n    if (typeof (data) === 'object') {\n      this.data.push(data);\n      this.updateWindowedData();\n    }\n  }\n\n  /**\n   * This updates the data in array to be viewed in graph\n   */\n  updateWindowedData = () => {\n    // console.log('window data updated');\n    this.moveDataWindow(this.data.length - this.windowLength - 1);\n  }\n\n  /**\n   * Move the position of data window within the main data.\n   * @param {number} position The target position of the window to be moved to.\n   */\n  moveDataWindow = (position) => {\n    if (position !== this.windowPosition && position > -1 && position < this.data.length - this.windowLength) {\n      // move position only if within valid range\n      this.windowedData = this.data.slice(position, position + this.windowLength);\n      this.windowPosition = position;\n      if (this.windowPosition === this.data.length - this.windowLength - 1) {\n        // enable auto scroll\n        this.autoScroll = true;\n      }\n      // console.log('moveDataWindow = ', position, this.windowPosition, this.windowLength, this.data.length, this.autoScroll, this.windowedData);\n      // update the map\n      this.updateHeatmap();\n    }\n  }\n\n  /**\n   * This sets the Heatmap Zoom level aka. window.\n   * @param {number} zoom The seconds to zoom into\n   */\n  setZoomLevel = (zoom) => {\n    let l = Math.min(Math.max(zoom, 3), this.data.length - 1);\n    let l2 = this.windowLength - l;\n    this.windowLength = l;\n    this.moveDataWindow(this.windowPosition + l2);\n  }\n\n  /**\n   * Render Function\n   */\n  render() {\n    const { width, height } = this.props;\n    // console.log('heatmap rendered', width, height, this.data);\n    return (\n      <canvas ref={this.canvasRef} width={width || 300} height={height || 150}\n        style={{\n          display: 'block',\n          width: '100%',\n          height: '100%',\n          cursor: 'crosshair',\n        }}></canvas>\n    );\n  }\n}\n","import React from 'react';\nimport StockHeatmap from '@rongmz/react-stock-heatmap';\nimport '@rongmz/react-stock-heatmap/dist/index.css';\n\n\nexport default () => {\n\n  const [loading, setLoading] = React.useState(true);\n  const progressRef = React.useRef(null);\n  /** @type {React.MutableRefObject<StockHeatmap>} */\n  const heatmapRef = React.useRef(null);\n  const [windowDim, setWindowDim] = React.useState([0, 0]);\n\n  // ------------ Load data -------------\n  React.useEffect(() => {\n    setLoading(true);\n    fetch('20200814').then(async ({ body, headers }) => {\n      const reader = body.getReader();\n      // Step 2: get total length\n      const contentLength = +headers.get('Content-Length');\n      // Step 3: read the data\n      let receivedLength = 0; // received that many bytes at the moment\n      let chunks = []; // array of received binary chunks (comprises the body)\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) {\n          break;\n        }\n        chunks.push(value);\n        receivedLength += value.length;\n        // console.log(`Received ${receivedLength} of ${contentLength} %=${100 * (receivedLength / contentLength)}`)\n        if (progressRef.current !== null) {\n          progressRef.current.innerHTML = ` Downloading ${(100 * receivedLength / contentLength).toFixed(1)}% ...`\n        }\n      }\n      // Step 4: concatenate chunks into single Uint8Array\n      let chunksAll = new Uint8Array(receivedLength); // (4.1)\n      let position = 0;\n      for (let chunk of chunks) {\n        chunksAll.set(chunk, position); // (4.2)\n        position += chunk.length;\n      }\n      // Step 5: decode into a string\n      let result = new TextDecoder(\"utf-8\").decode(chunksAll);\n      // setdata\n      if (heatmapRef.current !== null) {\n        heatmapRef.current.setData(\n          result.split('\\n')\n            .filter(v => v.trim() !== '')\n            .map(v => JSON.parse(v))\n        );\n      }\n      setLoading(false);\n    })\n  }, []);\n  // ------------ Load data -------------\n\n  // ---------- window update ------------\n  React.useEffect(() => {\n    const updateFn = () => {\n      setWindowDim([\n        window.innerWidth,\n        window.innerHeight\n      ]);\n    }\n    updateFn();\n    window.addEventListener('resize', updateFn);\n    return () => window.removeEventListener('resize', updateFn);\n  }, []);\n  // ---------- window update ------------\n\n  return (\n    <React.Fragment>\n\n      {loading &&\n        <div className=\"loadingIndicator\">\n          <div className=\"loadingSpinner\">\n            <div className=\"loader\">Loading...</div>\n          </div>\n          <div ref={progressRef}> Downloading 0% ...</div>\n        </div>}\n\n      <StockHeatmap ref={heatmapRef} width={windowDim[0]} height={windowDim[1]} />\n\n      <div className=\"btnContainer\">\n        <button onClick={() => { if (heatmapRef.current !== null) heatmapRef.current.setZoomLevel(60) }}>zoom 1 minute</button>\n        <button onClick={() => { if (heatmapRef.current !== null) heatmapRef.current.setZoomLevel(60 * 2) }}>zoom 2 minutes</button>\n        <button onClick={() => { if (heatmapRef.current !== null) heatmapRef.current.setZoomLevel(60 * 3) }}>zoom 3 minutes</button>\n        <button onClick={() => { if (heatmapRef.current !== null) heatmapRef.current.setZoomLevel(60 * 4) }}>zoom 4 minutes</button>\n        <button onClick={() => { if (heatmapRef.current !== null) heatmapRef.current.setZoomLevel(60 * 5) }}>zoom 5 minutes</button>\n        <button onClick={() => { if (heatmapRef.current !== null) heatmapRef.current.setZoomLevel(60 * 10) }}>zoom 10 minutes</button>\n      </div>\n    </React.Fragment>\n  )\n}\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}